// Generated by gencpp from file rosserial_tivac_tutorials/Buttons.msg
// DO NOT EDIT!


#ifndef ROSSERIAL_TIVAC_TUTORIALS_MESSAGE_BUTTONS_H
#define ROSSERIAL_TIVAC_TUTORIALS_MESSAGE_BUTTONS_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <std_msgs/Bool.h>
#include <std_msgs/Bool.h>

namespace rosserial_tivac_tutorials
{
template <class ContainerAllocator>
struct Buttons_
{
  typedef Buttons_<ContainerAllocator> Type;

  Buttons_()
    : sw1()
    , sw2()  {
    }
  Buttons_(const ContainerAllocator& _alloc)
    : sw1(_alloc)
    , sw2(_alloc)  {
  (void)_alloc;
    }



   typedef  ::std_msgs::Bool_<ContainerAllocator>  _sw1_type;
  _sw1_type sw1;

   typedef  ::std_msgs::Bool_<ContainerAllocator>  _sw2_type;
  _sw2_type sw2;




  typedef boost::shared_ptr< ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator> const> ConstPtr;

}; // struct Buttons_

typedef ::rosserial_tivac_tutorials::Buttons_<std::allocator<void> > Buttons;

typedef boost::shared_ptr< ::rosserial_tivac_tutorials::Buttons > ButtonsPtr;
typedef boost::shared_ptr< ::rosserial_tivac_tutorials::Buttons const> ButtonsConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace rosserial_tivac_tutorials

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'rosserial_tivac_tutorials': ['/home/wesley/Sources/TUhandControl/TivaC/catkin_rosserial_tut/src/rosserial_tivac_tutorials/msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator> >
{
  static const char* value()
  {
    return "a78ccaade8fa723d1ebeb7b099042085";
  }

  static const char* value(const ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xa78ccaade8fa723dULL;
  static const uint64_t static_value2 = 0x1ebeb7b099042085ULL;
};

template<class ContainerAllocator>
struct DataType< ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator> >
{
  static const char* value()
  {
    return "rosserial_tivac_tutorials/Buttons";
  }

  static const char* value(const ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator> >
{
  static const char* value()
  {
    return "std_msgs/Bool sw1\n\
std_msgs/Bool sw2\n\
\n\
================================================================================\n\
MSG: std_msgs/Bool\n\
bool data\n\
";
  }

  static const char* value(const ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.sw1);
      stream.next(m.sw2);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct Buttons_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::rosserial_tivac_tutorials::Buttons_<ContainerAllocator>& v)
  {
    s << indent << "sw1: ";
    s << std::endl;
    Printer< ::std_msgs::Bool_<ContainerAllocator> >::stream(s, indent + "  ", v.sw1);
    s << indent << "sw2: ";
    s << std::endl;
    Printer< ::std_msgs::Bool_<ContainerAllocator> >::stream(s, indent + "  ", v.sw2);
  }
};

} // namespace message_operations
} // namespace ros

#endif // ROSSERIAL_TIVAC_TUTORIALS_MESSAGE_BUTTONS_H
